import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    private static Map<String, String> userCredentials = new HashMap<>();
    private static Map<String, ReservationDetails> reservations = new HashMap<>();
    private static int pnrCounter = 1;

    static class ReservationDetails {
        String userName;
        String trainNumber;
        String className;
        String dateOfJourney;
        String from;
        String to;

        ReservationDetails(String userName, String trainNumber, String className,
                            String dateOfJourney, String from, String to) {
            this.userName = userName;
            this.trainNumber = trainNumber;
            this.className = className;
            this.dateOfJourney = dateOfJourney;
            this.from = from;
            this.to = to;
        }
    }

    public static void main(String[] args) {
        // Initialize some dummy user credentials for demonstration
        userCredentials.put("user1", "password1");
        userCredentials.put("user2", "password2");

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Login");
            System.out.println("2. Reservation");
            System.out.println("3. Cancellation");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    login();
                    break;
                case 2:
                    makeReservation();
                    break;
                case 3:
                    cancelReservation();
                    break;
                case 4:
                    System.exit(0);
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }

    private static void login() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        if (userCredentials.containsKey(username) && userCredentials.get(username).equals(password)) {
            System.out.println("Login successful!");
        } else {
            System.out.println("Invalid credentials. Login failed!");
        }
    }

    private static void makeReservation() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter train number: ");
        String trainNumber = scanner.nextLine();
        System.out.print("Enter class name: ");
        String className = scanner.nextLine();
        System.out.print("Enter date of journey: ");
        String dateOfJourney = scanner.nextLine();
        System.out.print("Enter source station: ");
        String from = scanner.nextLine();
        System.out.print("Enter destination station: ");
        String to = scanner.nextLine();

        ReservationDetails reservation = new ReservationDetails(username, trainNumber, className, dateOfJourney, from, to);
        reservations.put("PNR" + pnrCounter++, reservation);

        System.out.println("Reservation successful! Your PNR number is PNR" + (pnrCounter - 1));
    }

    private static void cancelReservation() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter PNR number: ");
        String pnr = scanner.nextLine();

        if (reservations.containsKey(pnr)) {
            ReservationDetails reservation = reservations.get(pnr);
            System.out.println("Details for PNR " + pnr + ":");
            System.out.println("Username: " + reservation.userName);
            System.out.println("Train Number: " + reservation.trainNumber);
            System.out.println("Class: " + reservation.className);
            System.out.println("Date of Journey: " + reservation.dateOfJourney);
            System.out.println("From: " + reservation.from);
            System.out.println("To: " + reservation.to);

            System.out.print("Do you want to cancel this reservation? (Y/N): ");
            String decision = scanner.nextLine();
            if (decision.equalsIgnoreCase("Y")) {
                reservations.remove(pnr);
                System.out.println("Reservation canceled successfully!");
            } else {
                System.out.println("Reservation not canceled.");
            }
        } else {
            System.out.println("Invalid PNR number. No reservation found.");
        }
    }
}
